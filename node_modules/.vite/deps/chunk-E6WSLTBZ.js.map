{
  "version": 3,
  "sources": ["../../svelte-fa/src/utils.js"],
  "sourcesContent": ["const parseNumber = parseFloat;\n\nexport function joinCss(obj, separator = ';') {\n  let texts;\n  if (Array.isArray(obj)) {\n    texts = obj.filter((text) => text);\n  } else {\n    texts = [];\n    for (const prop in obj) {\n      if (obj[prop]) {\n        texts.push(`${prop}:${obj[prop]}`);\n      }\n    }\n  }\n  return texts.join(separator);\n}\n\nexport function getStyles(style, size, pull, fw) {\n  let float;\n  let width;\n  const height = '1em';\n  let lineHeight;\n  let fontSize;\n  let textAlign;\n  let verticalAlign = '-.125em';\n  const overflow = 'visible';\n\n  if (fw) {\n    textAlign = 'center';\n    width = '1.25em';\n  }\n\n  if (pull) {\n    float = pull;\n  }\n\n  if (size) {\n    if (size == 'lg') {\n      fontSize = '1.33333em';\n      lineHeight = '.75em';\n      verticalAlign = '-.225em';\n    } else if (size == 'xs') {\n      fontSize = '.75em';\n    } else if (size == 'sm') {\n      fontSize = '.875em';\n    } else {\n      fontSize = size.replace('x', 'em');\n    }\n  }\n\n  return joinCss([\n    joinCss({\n      float,\n      width,\n      height,\n      'line-height': lineHeight,\n      'font-size': fontSize,\n      'text-align': textAlign,\n      'vertical-align': verticalAlign,\n      'transform-origin': 'center',\n      overflow,\n    }),\n    style,\n  ]);\n}\n\nexport function getTransform(\n  scale,\n  translateX,\n  translateY,\n  rotate,\n  flip,\n  translateTimes = 1,\n  translateUnit = '',\n  rotateUnit = '',\n) {\n  let flipX = 1;\n  let flipY = 1;\n\n  if (flip) {\n    if (flip == 'horizontal') {\n      flipX = -1;\n    } else if (flip == 'vertical') {\n      flipY = -1;\n    } else {\n      flipX = flipY = -1;\n    }\n  }\n\n  return joinCss(\n    [\n      `translate(${parseNumber(translateX) * translateTimes}${translateUnit},${parseNumber(translateY) * translateTimes}${translateUnit})`,\n      `scale(${flipX * parseNumber(scale)},${flipY * parseNumber(scale)})`,\n      rotate && `rotate(${rotate}${rotateUnit})`,\n    ],\n    ' ',\n  );\n}\n"],
  "mappings": ";AAAA,IAAM,cAAc;AAEb,SAAS,QAAQ,KAAK,YAAY,KAAK;AAC5C,MAAI;AACJ,MAAI,MAAM,QAAQ,GAAG,GAAG;AACtB,YAAQ,IAAI,OAAO,CAAC,SAAS,IAAI;AAAA,EACnC,OAAO;AACL,YAAQ,CAAC;AACT,eAAW,QAAQ,KAAK;AACtB,UAAI,IAAI,IAAI,GAAG;AACb,cAAM,KAAK,GAAG,QAAQ,IAAI,IAAI,GAAG;AAAA,MACnC;AAAA,IACF;AAAA,EACF;AACA,SAAO,MAAM,KAAK,SAAS;AAC7B;AAEO,SAAS,UAAU,OAAO,MAAM,MAAM,IAAI;AAC/C,MAAI;AACJ,MAAI;AACJ,QAAM,SAAS;AACf,MAAI;AACJ,MAAI;AACJ,MAAI;AACJ,MAAI,gBAAgB;AACpB,QAAM,WAAW;AAEjB,MAAI,IAAI;AACN,gBAAY;AACZ,YAAQ;AAAA,EACV;AAEA,MAAI,MAAM;AACR,YAAQ;AAAA,EACV;AAEA,MAAI,MAAM;AACR,QAAI,QAAQ,MAAM;AAChB,iBAAW;AACX,mBAAa;AACb,sBAAgB;AAAA,IAClB,WAAW,QAAQ,MAAM;AACvB,iBAAW;AAAA,IACb,WAAW,QAAQ,MAAM;AACvB,iBAAW;AAAA,IACb,OAAO;AACL,iBAAW,KAAK,QAAQ,KAAK,IAAI;AAAA,IACnC;AAAA,EACF;AAEA,SAAO,QAAQ;AAAA,IACb,QAAQ;AAAA,MACN;AAAA,MACA;AAAA,MACA;AAAA,MACA,eAAe;AAAA,MACf,aAAa;AAAA,MACb,cAAc;AAAA,MACd,kBAAkB;AAAA,MAClB,oBAAoB;AAAA,MACpB;AAAA,IACF,CAAC;AAAA,IACD;AAAA,EACF,CAAC;AACH;AAEO,SAAS,aACd,OACA,YACA,YACA,QACA,MACA,iBAAiB,GACjB,gBAAgB,IAChB,aAAa,IACb;AACA,MAAI,QAAQ;AACZ,MAAI,QAAQ;AAEZ,MAAI,MAAM;AACR,QAAI,QAAQ,cAAc;AACxB,cAAQ;AAAA,IACV,WAAW,QAAQ,YAAY;AAC7B,cAAQ;AAAA,IACV,OAAO;AACL,cAAQ,QAAQ;AAAA,IAClB;AAAA,EACF;AAEA,SAAO;AAAA,IACL;AAAA,MACE,aAAa,YAAY,UAAU,IAAI,iBAAiB,iBAAiB,YAAY,UAAU,IAAI,iBAAiB;AAAA,MACpH,SAAS,QAAQ,YAAY,KAAK,KAAK,QAAQ,YAAY,KAAK;AAAA,MAChE,UAAU,UAAU,SAAS;AAAA,IAC/B;AAAA,IACA;AAAA,EACF;AACF;",
  "names": []
}
