{
  "version": 3,
  "sources": ["../../locally-unique-id-generator/src/locally-unique-id-generator.ts"],
  "sourcesContent": ["//----------------------------------------------------------------------------//\n//                        locally unique Id Generator                         //\n//----------------------------------------------------------------------------//\n\n  let IdCounter = 0                         // hidden in the closure of \"nextId\"\n\n  function nextId ():number {            // a really unique incrementor function\n    return ++IdCounter\n  }\n\n/**** make global.nextId a real singleton ****/\n\n  const global = /*#__PURE__*/ Function('return this')()\n// see https://stackoverflow.com/questions/3277182/how-to-get-the-global-object-in-javascript\n\n  if (typeof global.__nextId !== 'function') {\n    global.__nextId = nextId\n  }\n\n/**** newUniqueId - the actually exported function ****/\n\n  function newUniqueId ():string {\n    return 'uid-' + global.__nextId()\n  }\n\n  export default newUniqueId\n\n"],
  "mappings": ";AAIE,IAAI,YAAY;AAEhB,SAAS,SAAM;AACb,SAAO,EAAE;AACX;AAIA,IAAM,SAAuB,SAAS,aAAa,EAAC;AAGpD,IAAI,OAAO,OAAO,aAAa,YAAY;AACzC,SAAO,WAAW;;AAKpB,SAAS,cAAW;AAClB,SAAO,SAAS,OAAO,SAAQ;AACjC;;",
  "names": []
}
